from saxpy import SAX
import pytest
import numpy as np

class TestSAX(object):
    def setup(self):
        # All tests will be run with 6 letter words
        # and 5 letter alphabet
        self.data = np.array(
        [25860.,  25855.,  25820.,  25840.,  25840.,  25805.,  25810.,  25760.,  25765.,
        25770.,  25790.,  25790.,  25765.,  25780.,  25790.,  25825.,  25835.,  25825.,
        25830.,  25830.,  25845.,  25820.,  25825.,  25750.,  25770.,  25755.,  25695.,
        25670.,  25680.,  25700.,  25705.,  25710.,  25695.,  25690.,  25675.,  25690.,
        25700.,  25705.,  25735.,  25740.,  25750.,  25730.,  25720.,  25730.,  25720.,
        25720.,  25685.,  25700.,  25690.,  25690.,  25685.,  25680.,  25670.,  25680.,
        25685.,  25695.,  25690.,  25705.,  25705.,  25700.,  25680.,  25690.,  25685.,
        25705.,  25715.,  25730.,  25730.,  25715.,  25700.,  25715.,  25720.,  25730.,
        25735.,  25730.,  25725.,  25720.,  25720.,  25725.,  25695.,  25685.,  25675.,
        25680.,  25680.,  25700.,  25720.,  25730.,  25710.,  25735.,  25735.,  25775.,
        25760.,  25755.,  25735.,  25740.,  25710.,  25675.,  25650.,  25670.,  25640.,
        25625.,  25640.,  25655.,  25645.,  25645.,  25640.,  25630.,  25580.,  25530.,
        25520.,  25510.,  25535.,  25480.,  25480.,  25500.,  25460.,  25510.,  25495.,
        25525.,  25500.,  25470.,  25510.,  25540.,  25590.,  25560.,  25560.,  25575.,
        25550.,  25545.,  25545.,  25525.,  25515.,  25515.,  25490.,  25515.,  25540.,
        25510.,  25495.,  25520.,  25490.,  25535.,  25540.,  25540.,  25530.,  25510.,
        25535.,  25545.,  25535.,  25535.,  25560.,  25555.,  25530.,  25540.,  25525.,
        25540.,  25540.,  25550.,  25550.,  25555.,  25545.,  25545.,  25565.,  25575.,
        25600.,  25570.,  25580.,  25570.,  25550.,  25570.,  25555.,  25544.,  25545.,
        25540.,  25535.,  25515.,  25525.,  25535.,  25550.,  25540.,  25530.,  25540.,
        25545.,  25535.,  25520.,  25490.,  25505.,  25525.,  25500.,  25500.,  25500.,
        25480.,  25475.,  25445.,  25460.,  25465.,  25470.,  25500.,  25505.,  25520.,
        25525.,  25525.,  25545.,  25530.,  25505.,  25475.,  25415.,  25450.,  25460.,
        25435.,  25465.,  25440.,  25465.,  25455.,  25445.,  25435.,  25450.,  25470.,
        25435.,  25425.,  25435.,  25440.,  25425.,  25435.,  25450.,  25455.,  25450.,
        25450.,  25465.,  25445.,  25435.,  25440.,  25425.,  25430.,  25410.,  25400.,
        25400.,  25420.,  25400.,  25420.,  25430.,  25435.,  25445.,  25425.,  25420.,
        25415.,  25420.,  25440.,  25415.,  25415.,  25315.,  25330.,  25375.,  25360.,
        25360.,  25370.,  25410.,  25425.,  25425.,  25460.,  25465.,  25460.,  25460.,
        25510.,  25510.,  25465.,  25465.,  25470.,  25495.,  25495.,  25475.,  25465.,
        25470.,  25485.,  25485.,  25485.,  25485.,  25480.,  25475.,  25490.,  25480.,
        25495.,  25485.,  25510.,  25505.,  25505.,  25530.,  25500.,  25500.,  25480.,
        25490.,  25490.,  25460.,  25460.,  25455.,  25455.,  25450.,  25435.,  25445.,
        25450.,  25455.,  25450.]
        )
        self.sax = SAX(6, 5, 1e-6)

    def test_to_letter_rep(self):
        arr = [7,1,4,4,4,4]
        (letters, indices) = self.sax.to_letter_rep(arr)
        assert letters == 'eacccc'

    # def test_long_to_letter_rep(self):
    #     long_arr = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,6,6,6,6,10,100]
    #     (letters, indices) = self.sax.to_letter_rep(long_arr)
    #     assert letters == 'bbbbce'

    def test_sliding_window(self):
        long_arr = self.data
        (letters, indices) = self.sax.sliding_window(long_arr)
        scores = self.sax.batch_compare(letters, 'bbbbbe')
        # print letters
        # print indices
        print scores


    def test_compare_strings(self):
        base_string = 'aaabbc'
        similar_string = 'aabbbc'
        dissimilar_string = 'ccddbc'
        similar_score = self.sax.compare_strings(base_string, similar_string)
        dissimilar_score = self.sax.compare_strings(base_string, dissimilar_string)
        assert similar_score < dissimilar_score


if __name__=='__main__':
    pytest.main("-s ctaStrategy/my_module/saxpy/test_saxpy.py")